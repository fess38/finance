<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
  <class name="ru.fess38.finance.model.Transaction" table="${transactionTable}">
    <id name="id" column="id">
      <generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
        <param name="sequence_name">${sequence}</param>
      </generator>
    </id>
    <property name="amountFrom" column="amountFrom" />
    <property name="amountTo" column="amountTo" />
    <property name="dayRef" column="dayRef" />
    <property name="comment" column="comment" />
    <many-to-one name="accountFrom" class="ru.fess38.finance.model.Account" column="accountFromId" lazy="false" />
    <many-to-one name="accountTo" class="ru.fess38.finance.model.Account" column="accountToId" lazy="false" />
    <many-to-one name="rubric" class="ru.fess38.finance.model.Rubric" column="rubricId" lazy="false" />
    <many-to-one name="transactionGroup" class="ru.fess38.finance.model.TransactionGroup" column="transactionGroupId"
      lazy="false" />
    <many-to-one name="user" class="ru.fess38.finance.model.User" column="userId" lazy="false" />
    <property name="isDeleted" column="isDeleted" access="noop" insert="false" update="false" />
    <sql-delete><![CDATA[ update ${transactionTable} set isDeleted = TRUE where id = :id ]]></sql-delete>
  </class>

  <query name="transactionFindByYearMonth">
    <![CDATA[ from Transaction where YEAR(dayRef) = :year and MONTH(dayRef) = :month
    and isDeleted = FALSE]]>
  </query>

  <sql-query name="isEntityUsed" read-only="true">
    <![CDATA[ SELECT COUNT(*)
    FROM (
      SELECT rubricId id, isDeleted
      FROM ${transactionTable}
      UNION ALL
      SELECT accountFromId, isDeleted
      FROM ${transactionTable}
      UNION ALL
      SELECT accountToId, isDeleted
      FROM ${transactionTable}
      UNION ALL
      SELECT userId, isDeleted
      FROM ${transactionTable}
      UNION ALL
      SELECT transactionGroupId, isDeleted
      FROM ${transactionTable}
      UNION ALL
      SELECT currencyId, isDeleted
      FROM ${accountTable}
      ) t
    WHERE t.id = :id and t.isDeleted = FALSE ]]>
  </sql-query>
</hibernate-mapping>
